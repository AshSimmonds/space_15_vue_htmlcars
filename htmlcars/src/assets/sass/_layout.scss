.lcars-button-grid
{
  display: grid;
  grid-template-rows: repeat(auto-fit, minmax(2rem, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(6rem, 1fr));
  grid-auto-rows: 2rem;
  grid-auto-columns: 6rem;
  grid-row-gap: 0.5rem;
  grid-column-gap: 1rem;
}

.lcars-hide-bar-space
{
  .lcars-bar-space
  {
    display: none;
  }
}

%merge-right
{
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

%merge-left
{
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.lcars-button-panel
{
  display: grid;
  grid-template-columns: [left] 1fr [mid] 1fr [right];
  grid-auto-rows: min-content;
  grid-auto-columns: 1fr;
  grid-gap: 0.5rem;

  .lcars-button-panel-group
  {
    display: contents;

    .lcars-btn:nth-child(2n+1):nth-last-child(n+2)
    {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      grid-column: 1 / 2;
    }

    .lcars-btn:nth-child(2n):nth-last-child(n+1)
    {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      grid-column: 2 / 3;
    }
  }
}

.lcars-container
{
  border-radius: 1em;
  background-color: var(--lcars-theme-secondary);
  padding: 0.6em 0;
  margin-bottom: 0.7em;

  .lcars-container-inlay
  {
    background-color: var(--lcars-screen-bg);
    border-radius: 0.5rem;
    padding: 0.6rem;
    border-left: 0.5em solid map-get($lcars-colors, lb);
    border-right: 0.5em solid map-get($lcars-colors, lb);
  }

  .lcars-container-example
  {
    @include lcars-screen-def(#111, #fff);
    @extend %lcars-screen-ref;
    padding: 1rem;
    margin-top: 1rem;
    margin-bottom: 1rem;
  }
}

.lcars-console
{
  display: grid;
  grid-gap: 0.4rem;
  grid-template-columns: [start] 0 [before left]
  min-content [num] min-content [blk] min-content [wrap] min-content [right left]
  min-content [num] min-content [blk] min-content [wrap] min-content [right after] 0 [end];
  grid-template-rows: min-content;
  grid-auto-flow: row;

  .lcars-console-line
  {
    display: contents;

    &::before
    {
      content: "";
      grid-column: start / before;
      background-color: red;
    }

    &::after
    {
      content: "";
      grid-column: after / end;
      background-color: red;
    }

    .left
    {
      grid-column: left / num;
      @extend %merge-right;
    }

    .block
    {
      grid-column: blk / wrap;
      @extend %merge-left;
      @extend %merge-right;
    }

    .right
    {
      grid-column: wrap / right;
      @extend %merge-left;
    }

    span, .num
    {
      @extend .lcars-font;
      grid-column: num / blk;
      font-size: 300%;
      line-height: 0.8em;
      padding: 0 0.3rem;
    }
  }
}

.lcars-table
{
  /*border-spacing: 0;*/
  /*line-height: 1em;*/

  th
  {
    @extend .lcars-fg-or;
  }
}

.lcars-h-scroll
{
  overflow-x: auto;
  padding-bottom: 0;
}

.lcars-v-scroll
{
  overflow-y: auto;
  padding-right: 0;
}

.lcars-table {
  margin-bottom: 1rem;
}
